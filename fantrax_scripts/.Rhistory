for.filtered_weekly_player_df$ACNC * 1 +
for.filtered_weekly_player_df$CoS * 1 +
for.filtered_weekly_player_df$TkW * 1 +
for.filtered_weekly_player_df$Int.x * 1 +
for.filtered_weekly_player_df$AER * 0.5 +
for.filtered_weekly_player_df$CLR * 0 +
for.filtered_weekly_player_df$DIS * -0.5 +
for.filtered_weekly_player_df$PKM * -4 +
for.filtered_weekly_player_df$OG * -5 +
for.filtered_weekly_player_df$YC * -3 +
for.filtered_weekly_player_df$RC * -7 +
for.filtered_weekly_player_df$xCS * 0 +
for.filtered_weekly_player_df$GAD * 0
#combine all the position dataframes into one
all_combined_df <- rbind(def.filtered_weekly_player_df, mid.filtered_weekly_player_df, for.filtered_weekly_player_df)
#write.csv(x = all_combined_df, file = "../data/fantrax_data/weekly_data.no_min_requirement.updated_positions.xFpts_epl_2019_2020.csv")
summary_combined_xfpts_df <- all_combined_df %>%
group_by(Player, Team.x, Position) %>%
summarize(n = n(), min_total = sum(Min.x),  mean_minutes = mean(Min.x), mean_xFpts = mean(xFpts), sd_xFpts = sd(xFpts), median_xFpts = median(xFpts), mean_fpts = mean(updated_fpts), sd_fpts = sd(updated_fpts), median_ftps = median(updated_fpts),  total_xFpts = sum(xFpts), total_fpts = sum(updated_fpts), mean_xCS = mean(xCS), xCS = sum(xCS), CS = sum(CS))
hist(summary_combined_xfpts_df$sd_xFpts)
hist(summary_combined_xfpts_df$sd_fpts)
#write.csv(x = summary_combined_xfpts_df, file = "../data/fantrax_data/no_min_requirement.updated_positions.xFpts_epl_2019_2020.csv")
hist(all_combined_df[all_combined_df$Player == 'Trent Alexander-Arnold',]$xFpts, breaks = 15)
hist(all_combined_df[all_combined_df$Player == 'Cesar Azpilicueta',]$xFpts, breaks = 15)
taa <- all_combined_df[all_combined_df$Player == 'Trent Alexander-Arnold',]$xFpts
ca <- all_combined_df[all_combined_df$Player == 'Cesar Azpilicueta',]$xFpts
ld <- all_combined_df[all_combined_df$Player == 'Lucas Digne',]$xFpts
all = all_combined_df[all_combined_df$Position == 'D',]$xFpts
df = data.frame(player = c(rep('Alexander-Arnold', length(taa)), rep('Azpilicueta', length(ca)), rep('Digne', length(ld))),
xfpts = c(taa, ca, ld))
ggplot(data = df, aes(x=xfpts, fill = player)) +
geom_density(alpha = 0.55) +
theme_light() +
ylab("Probability")  +
xlab("xFpts") +
ggtitle('Distribution of xFpts') +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = "~/Desktop/Overthinking_Football/Defender_density.png", width = 10, height = 6)
hist(all_combined_df[all_combined_df$Player == 'Trent Alexander-Arnold',]$xFpts, breaks = 15)
hist(all_combined_df[all_combined_df$Player == 'Cesar Azpilicueta',]$xFpts, breaks = 15)
rm_pts <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$xFpts
jwp_pts <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$xFpts
rm_week <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$game_week
jwp_week <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$game_week
density_df = data.frame(player = c(rep('Mahrez', length(rm_pts)), rep('JWP', length(jwp_pts))),
xfpts = c(rm_pts, jwp_pts),
week = c(rm_week, jwp_week))
ggplot(data = density_df, aes(x=xfpts, fill = player)) +
geom_density(alpha = 0.55) +
theme_light() +
ylab("Probability")  +
xlab("xFpts") +
ggtitle('Distribution of xFpts') +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = "~/Desktop/Overthinking_Football/JWP_MMahrez_density.png", width = 10, height = 6)
missed_rm_weeks = c(2,3,5,9,10,11,12,15,16,17,19, 23, 26, 28, 29,32, 33,36,37,38)
bar_df <- data.frame(player = c(rep('Mahrez', 38), rep('JWP', 38)),
xfpts = c(rm_pts, rep(0, length(missed_rm_weeks)), jwp_pts),
week = c(rm_week, missed_rm_weeks, jwp_week))
bar_df <- data.frame(player = c(rep('Mahrez', 38), rep('JWP', 38)),
xfpts = c(rm_pts, rep(0, length(missed_rm_weeks)), jwp_pts),
week = c(rm_week, missed_rm_weeks, jwp_week))
ggplot(data = bar_df, aes(x=week, y=xfpts, fill = player, color = player)) +
geom_bar(alpha = 0.55,
stat = 'identity',
position = 'identity') +
theme_light() +
ylab("xFpts")  +
xlab("Game Week") +
ggtitle('Weekly xFpts Comparison') +
theme(plot.title = element_text(hjust = 0.5))
bar_df <- data.frame(player = c(rep('Mahrez', 38), rep('JWP', 38)),
xfpts = c(rm_pts, rep(0, length(missed_rm_weeks)), jwp_pts),
week = c(rm_week, missed_rm_weeks, jwp_week))
hist(all_combined_df[all_combined_df$Player == 'Trent Alexander-Arnold',]$xFpts, breaks = 15)
hist(all_combined_df[all_combined_df$Player == 'Cesar Azpilicueta',]$xFpts, breaks = 15)
rm_pts <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$xFpts
jwp_pts <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$xFpts
rm_week <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$game_week
jwp_week <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$game_week
density_df = data.frame(player = c(rep('Mahrez', length(rm_pts)), rep('JWP', length(jwp_pts))),
xfpts = c(rm_pts, jwp_pts),
week = c(rm_week, jwp_week))
ggplot(data = density_df, aes(x=xfpts, fill = player)) +
geom_density(alpha = 0.55) +
theme_light() +
ylab("Probability")  +
xlab("xFpts") +
ggtitle('Distribution of xFpts') +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = "~/Desktop/Overthinking_Football/JWP_MMahrez_density.png", width = 10, height = 6)
missed_rm_weeks = c(2,3,5,9,10,11,12,15,16,17,19, 23, 26, 28, 29,32, 33,36,37,38)
bar_df <- data.frame(player = c(rep('Mahrez', 38), rep('JWP', 38)),
xfpts = c(rm_pts, rep(0, length(missed_rm_weeks)), jwp_pts),
week = c(rm_week, missed_rm_weeks, jwp_week))
hist(all_combined_df[all_combined_df$Player == 'Trent Alexander-Arnold',]$xFpts, breaks = 15)
hist(all_combined_df[all_combined_df$Player == 'Cesar Azpilicueta',]$xFpts, breaks = 15)
rm_pts <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$xFpts
jwp_pts <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$xFpts
rm_week <- all_combined_df[all_combined_df$Player == 'Riyad Mahrez',]$game_week
jwp_week <- all_combined_df[all_combined_df$Player == 'James Ward-Prowse',]$game_week
density_df = data.frame(player = c(rep('Mahrez', length(rm_pts)), rep('JWP', length(jwp_pts))),
xfpts = c(rm_pts, jwp_pts),
week = c(rm_week, jwp_week))
ggplot(data = density_df, aes(x=xfpts, fill = player)) +
geom_density(alpha = 0.55) +
theme_light() +
ylab("Probability")  +
xlab("xFpts") +
ggtitle('Distribution of xFpts') +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = "~/Desktop/Overthinking_Football/JWP_MMahrez_density.png", width = 10, height = 6)
missed_rm_weeks = c(2,3,5,9,10,11,12,15,16,17, 23, 26, 28, 29,32, 33,36,37,38)
bar_df <- data.frame(player = c(rep('Mahrez', 38), rep('JWP', 38)),
xfpts = c(rm_pts, rep(0, length(missed_rm_weeks)), jwp_pts),
week = c(rm_week, missed_rm_weeks, jwp_week))
jwp_df <- bar_df[bar_df$player == 'JWP',]
mahrez_df <- bar_df[bar_df$player == 'Mahrez',]
mahrez_jwp_game_week <- merge(jwp_df, mahrez_df, by = 'week')
diff_df <- data.frame(game_week = mahrez_jwp_game_week$week,
point_diff = mahrez_jwp_game_week$xfpts.x - mahrez_jwp_game_week$xfpts.y,
mahrez_pts = -1 * mahrez_jwp_game_week$xfpts.y,
jwp_pts = mahrez_jwp_game_week$xfpts.x)
ggplot(data = bar_df, aes(x=week, y=xfpts, fill = player)) +
geom_col(position='dodge')
ggplot(data = bar_df, aes(x=week, y=xfpts, color = player)) +
geom_line() +
theme_bw()
ggplot(data = diff_df, aes(x=game_week, y=point_diff)) +
geom_col()
ggplot(data = bar_df, aes(x=week, y=xfpts, fill = player, color = player)) +
geom_bar(alpha = 0.55,
stat = 'identity',
position = 'identity') +
theme_light() +
ylab("xFpts")  +
xlab("Game Week") +
ggtitle('Weekly xFpts Comparison') +
theme(plot.title = element_text(hjust = 0.5))
ggsave(filename = "~/Desktop/Overthinking_Football/JWP_MMahrez_weekly.png", width = 10, height = 6)
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(ggplot2)
library(ggrepel)
wd = "~/Documents/GitHub/overthinking_football/fantrax_scripts"
min_starts_requirement <- 5
## JUST MAKE SURE NOT A SUB
#load all player data for fbref.com
setwd(wd)
weekly_data_csv = "../data/fantrax_data/weekly.all_data_combined.no_double_gws.updated_positions.csv"
weekly_data_df <- read_csv(file = weekly_data_csv, col_names = TRUE)
#load all player data for fbref.com
setwd(wd)
weekly_data_csv = "../data/fantrax_data/fantrax.weekly.all_data_combined.no_double_gws.new_positions.csv"
weekly_data_df <- read_csv(file = weekly_data_csv, col_names = TRUE)
# Only weeks where at least 60 minutes are played
min_minute_df <- weekly_data_df[weekly_data_df$SubOn == 0 & weekly_data_df$GP == 1,]
# Players that have started at least 5 games
summary_min_minutes_df <- min_minute_df %>%
group_by(Player, Team, Position) %>%
summarize(n = n(), min_total = sum(Min), sd = sd(FPts), mean = mean(FPts), total_fpts = sum(FPts), mean_minutes = mean(Min))
#only players with at least 5 starts
players_min_starts_summary_df <- summary_min_minutes_df[summary_min_minutes_df$n >= min_starts_requirement,]
player_min_starts_weekly_df <- min_minute_df %>%
filter(Player %in% players_min_starts_summary_df$Player)
nrow(player_min_starts_weekly_df)
def.filtered_weekly_player_df$Ast
#negate %in%
`%!in%` = Negate(`%in%`)
#### Standard calculations for all players ####
#read in fbref_summary data
fbref_summ_df <- read_csv('../data/fbref/premier_league/19_20/name_cleaned.summary_table.game_week.csv')
#clean sheet data
cs_df <- read_csv('../data/fantrax_data/game_results.csv')
#negate %in%
`%!in%` = Negate(`%in%`)
#### Standard calculations for all players ####
#read in fbref_summary data
fbref_summ_df <- read_csv('../data/fbref/premier_league/19_20/name_cleaned.summary_table.game_week.csv')
#clean sheet data
cs_df <- read_csv('../data/fantrax_data/game_results.csv')
#just get the important stuff for clean sheets (name "Team.y" for easy merge in a sec)
all_cs_data_df <- data.frame('Team.y' = c(cs_df$Home, cs_df$Away), 'xG_against' = c(cs_df$xG_1, cs_df$xG), 'game_week' = c(cs_df$Wk, cs_df$Wk))
# add fbref data
min_minutes_weekly_merged_df <- merge(player_min_starts_weekly_df, fbref_summ_df, by=c('Player', 'game_week'))
# add clean sheet data
min_minutes_merged_cs_df <- merge(min_minutes_weekly_merged_df, all_cs_data_df, by=c("Team.y", "game_week"))
# calculate xGAD and xCS
min_minutes_merged_cs_df$xGAD <- ifelse(min_minutes_merged_cs_df$xG_against - 0.25 < 0, 0, min_minutes_merged_cs_df$xG_against - 0.25)
min_minutes_merged_cs_df$xCS <- ifelse(min_minutes_merged_cs_df$xGAD <= 1.25, 1 - min_minutes_merged_cs_df$xGAD/1.25, 0)
filtered_weekly_player_df <- min_minutes_merged_cs_df
#### DEFENDERS xFPTS ####
#calculate xFpts for defenders
def.filtered_weekly_player_df <- filtered_weekly_player_df[filtered_weekly_player_df$Position == 'D',]
# calculate fpts based on the updated fantrax rules
def.filtered_weekly_player_df$xFpts <- def.filtered_weekly_player_df$xG * 6 +
def.filtered_weekly_player_df$xA * 3 +
def.filtered_weekly_player_df$AF * 2 +
def.filtered_weekly_player_df$A2 * 1 +
def.filtered_weekly_player_df$BCC * 1 +
def.filtered_weekly_player_df$GP * 2 +
def.filtered_weekly_player_df$Int.x * 0.333
def.filtered_weekly_player_df$Pen * -1 +
def.filtered_weekly_player_df$PKM * -2 +
def.filtered_weekly_player_df$OG * -2 +
def.filtered_weekly_player_df$YC * -1 +
def.filtered_weekly_player_df$RC * -3 +
def.filtered_weekly_player_df$xCS * 4 +
def.filtered_weekly_player_df$xGAD * -0.5 +
def.filtered_weekly_player_df$SOT * 0.5 +
def.filtered_weekly_player_df$TkW * 0.333
#### MIDFIELDERS xFPTS ####
#load in just midfielders
mid.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'M',]
#calculate xFpts for midfielders
mid.filtered_weekly_player_df$xFpts <- mid.filtered_weekly_player_df$xG * 5 +
mid.filtered_weekly_player_df$xA * 3 +
mid.filtered_weekly_player_df$AF * 2 +
mid.filtered_weekly_player_df$A2 * 1 +
mid.filtered_weekly_player_df$BCC * 1 +
mid.filtered_weekly_player_df$GP * 2 +
mid.filtered_weekly_player_df$Int.x * 0.333
mid.filtered_weekly_player_df$Pen * -1 +
mid.filtered_weekly_player_df$PKM * -2 +
mid.filtered_weekly_player_df$OG * -2 +
mid.filtered_weekly_player_df$YC * -1 +
mid.filtered_weekly_player_df$RC * -3 +
mid.filtered_weekly_player_df$xCS * 1 +
mid.filtered_weekly_player_df$xGAD * -0.5 +
mid.filtered_weekly_player_df$SOT * 0.5 +
mid.filtered_weekly_player_df$TkW * 0.333
#### FORWARDS xFPTS ####
#load in just forwards
for.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'F',]
#calculate xFpts for forwards
for.filtered_weekly_player_df$xFpts <-  for.filtered_weekly_player_df$xG * 4 +
for.filtered_weekly_player_df$xA * 3 +
for.filtered_weekly_player_df$AF * 2 +
for.filtered_weekly_player_df$A2 * 1 +
for.filtered_weekly_player_df$BCC * 1 +
for.filtered_weekly_player_df$GP * 2 +
for.filtered_weekly_player_df$Int.x * 0.333
for.filtered_weekly_player_df$Pen * -1 +
for.filtered_weekly_player_df$PKM * -2 +
for.filtered_weekly_player_df$OG * -2 +
for.filtered_weekly_player_df$YC * -1 +
for.filtered_weekly_player_df$RC * -3 +
for.filtered_weekly_player_df$xCS * 0 +
for.filtered_weekly_player_df$xGAD * -0.5 +
for.filtered_weekly_player_df$SOT * 0.5 +
for.filtered_weekly_player_df$TkW * 0.333
#combine all the position dataframes into one
all_combined_df <- rbind(def.filtered_weekly_player_df, mid.filtered_weekly_player_df, for.filtered_weekly_player_df)
write.csv(x = all_combined_df, file = "../../../../Desktop/weekly_data.custom_scoring.xFpts_epl_2019_2020.csv")
summary_combined_xfpts_df <- all_combined_df %>%
group_by(Player, Team.x, Position) %>%
summarize(n = n(), min_total = sum(Min.x),  mean_minutes = mean(Min.x), mean_xFpts = mean(xFpts), sd_xFpts = sd(xFpts), median_xFpts = median(xFpts), mean_fpts = mean(updated_fpts), sd_fpts = sd(updated_fpts), median_ftps = median(updated_fpts),  total_xFpts = sum(xFpts), total_fpts = sum(updated_fpts), mean_xCS = mean(xCS), xCS = sum(xCS), CS = sum(CS))
#negate %in%
`%!in%` = Negate(`%in%`)
#### Standard calculations for all players ####
#read in fbref_summary data
fbref_summ_df <- read_csv('../data/fbref/premier_league/19_20/name_cleaned.summary_table.game_week.csv')
#clean sheet data
cs_df <- read_csv('../data/fantrax_data/game_results.csv')
#just get the important stuff for clean sheets (name "Team.y" for easy merge in a sec)
all_cs_data_df <- data.frame('Team.y' = c(cs_df$Home, cs_df$Away), 'xG_against' = c(cs_df$xG_1, cs_df$xG), 'game_week' = c(cs_df$Wk, cs_df$Wk))
# add fbref data
min_minutes_weekly_merged_df <- merge(player_min_starts_weekly_df, fbref_summ_df, by=c('Player', 'game_week'))
# add clean sheet data
min_minutes_merged_cs_df <- merge(min_minutes_weekly_merged_df, all_cs_data_df, by=c("Team.y", "game_week"))
# calculate xGAD and xCS
min_minutes_merged_cs_df$xGAD <- ifelse(min_minutes_merged_cs_df$xG_against - 0.25 < 0, 0, min_minutes_merged_cs_df$xG_against - 0.25)
min_minutes_merged_cs_df$xCS <- ifelse(min_minutes_merged_cs_df$xGAD <= 1.25, 1 - min_minutes_merged_cs_df$xGAD/1.25, 0)
filtered_weekly_player_df <- min_minutes_merged_cs_df
#### DEFENDERS xFPTS ####
#calculate xFpts for defenders
def.filtered_weekly_player_df <- filtered_weekly_player_df[filtered_weekly_player_df$Position == 'D',]
# calculate fpts based on the updated fantrax rules
def.filtered_weekly_player_df$xFpts <- def.filtered_weekly_player_df$xG * 6 +
def.filtered_weekly_player_df$xA * 3 +
def.filtered_weekly_player_df$AF * 2 +
def.filtered_weekly_player_df$A2 * 1 +
def.filtered_weekly_player_df$BCC * 1 +
def.filtered_weekly_player_df$GP * 2 +
def.filtered_weekly_player_df$Int.x * 0.333
def.filtered_weekly_player_df$Pen * -1 +
def.filtered_weekly_player_df$PKM * -2 +
def.filtered_weekly_player_df$OG * -2 +
def.filtered_weekly_player_df$YC * -1 +
def.filtered_weekly_player_df$RC * -3 +
def.filtered_weekly_player_df$xCS * 4 +
def.filtered_weekly_player_df$xGAD * -0.5 +
def.filtered_weekly_player_df$SOT * 0.5 +
def.filtered_weekly_player_df$TkW * 0.333
#### MIDFIELDERS xFPTS ####
#load in just midfielders
mid.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'M',]
#calculate xFpts for midfielders
mid.filtered_weekly_player_df$xFpts <- mid.filtered_weekly_player_df$xG * 5 +
mid.filtered_weekly_player_df$xA * 3 +
mid.filtered_weekly_player_df$AF * 2 +
mid.filtered_weekly_player_df$A2 * 1 +
mid.filtered_weekly_player_df$BCC * 1 +
mid.filtered_weekly_player_df$GP * 2 +
mid.filtered_weekly_player_df$Int.x * 0.333
mid.filtered_weekly_player_df$Pen * -1 +
mid.filtered_weekly_player_df$PKM * -2 +
mid.filtered_weekly_player_df$OG * -2 +
mid.filtered_weekly_player_df$YC * -1 +
mid.filtered_weekly_player_df$RC * -3 +
mid.filtered_weekly_player_df$xCS * 1 +
mid.filtered_weekly_player_df$xGAD * -0.5 +
mid.filtered_weekly_player_df$SOT * 0.5 +
mid.filtered_weekly_player_df$TkW * 0.333
#### FORWARDS xFPTS ####
#load in just forwards
for.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'F',]
#calculate xFpts for forwards
for.filtered_weekly_player_df$xFpts <-  for.filtered_weekly_player_df$xG * 4 +
for.filtered_weekly_player_df$xA * 3 +
for.filtered_weekly_player_df$AF * 2 +
for.filtered_weekly_player_df$A2 * 1 +
for.filtered_weekly_player_df$BCC * 1 +
for.filtered_weekly_player_df$GP * 2 +
for.filtered_weekly_player_df$Int.x * 0.333
for.filtered_weekly_player_df$Pen * -1 +
for.filtered_weekly_player_df$PKM * -2 +
for.filtered_weekly_player_df$OG * -2 +
for.filtered_weekly_player_df$YC * -1 +
for.filtered_weekly_player_df$RC * -3 +
for.filtered_weekly_player_df$xCS * 0 +
for.filtered_weekly_player_df$xGAD * -0.5 +
for.filtered_weekly_player_df$SOT * 0.5 +
for.filtered_weekly_player_df$TkW * 0.333
#combine all the position dataframes into one
all_combined_df <- rbind(def.filtered_weekly_player_df, mid.filtered_weekly_player_df, for.filtered_weekly_player_df)
write.csv(x = all_combined_df, file = "../../../../Desktop/weekly_data.custom_scoring.xFpts_epl_2019_2020.csv")
#summary_combined_xfpts_df <- all_combined_df %>%
group_by(Player, Team.x, Position) %>%
summarize(n = n(), min_total = sum(Min.x),  mean_minutes = mean(Min.x), mean_xFpts = mean(xFpts), sd_xFpts = sd(xFpts), median_xFpts = median(xFpts), mean_fpts = mean(updated_fpts), sd_fpts = sd(updated_fpts), median_ftps = median(updated_fpts),  total_xFpts = sum(xFpts), total_fpts = sum(updated_fpts), mean_xCS = mean(xCS), xCS = sum(xCS), CS = sum(CS))
#negate %in%
`%!in%` = Negate(`%in%`)
#### Standard calculations for all players ####
#read in fbref_summary data
fbref_summ_df <- read_csv('../data/fbref/premier_league/19_20/name_cleaned.summary_table.game_week.csv')
#clean sheet data
cs_df <- read_csv('../data/fantrax_data/game_results.csv')
#just get the important stuff for clean sheets (name "Team.y" for easy merge in a sec)
all_cs_data_df <- data.frame('Team.y' = c(cs_df$Home, cs_df$Away), 'xG_against' = c(cs_df$xG_1, cs_df$xG), 'game_week' = c(cs_df$Wk, cs_df$Wk))
# add fbref data
min_minutes_weekly_merged_df <- merge(player_min_starts_weekly_df, fbref_summ_df, by=c('Player', 'game_week'))
# add clean sheet data
min_minutes_merged_cs_df <- merge(min_minutes_weekly_merged_df, all_cs_data_df, by=c("Team.y", "game_week"))
# calculate xGAD and xCS
min_minutes_merged_cs_df$xGAD <- ifelse(min_minutes_merged_cs_df$xG_against - 0.25 < 0, 0, min_minutes_merged_cs_df$xG_against - 0.25)
min_minutes_merged_cs_df$xCS <- ifelse(min_minutes_merged_cs_df$xGAD <= 1.25, 1 - min_minutes_merged_cs_df$xGAD/1.25, 0)
filtered_weekly_player_df <- min_minutes_merged_cs_df
#### DEFENDERS xFPTS ####
#calculate xFpts for defenders
def.filtered_weekly_player_df <- filtered_weekly_player_df[filtered_weekly_player_df$Position == 'D',]
# calculate fpts based on the updated fantrax rules
def.filtered_weekly_player_df$xFpts <- def.filtered_weekly_player_df$xG * 6 +
def.filtered_weekly_player_df$xA * 3 +
def.filtered_weekly_player_df$AF * 2 +
def.filtered_weekly_player_df$A2 * 1 +
def.filtered_weekly_player_df$BCC * 1 +
def.filtered_weekly_player_df$GP * 2 +
def.filtered_weekly_player_df$Int.x * 0.333
def.filtered_weekly_player_df$Pen * -1 +
def.filtered_weekly_player_df$PKM * -2 +
def.filtered_weekly_player_df$OG * -2 +
def.filtered_weekly_player_df$YC * -1 +
def.filtered_weekly_player_df$RC * -3 +
def.filtered_weekly_player_df$xCS * 4 +
def.filtered_weekly_player_df$xGAD * -0.5 +
def.filtered_weekly_player_df$SOT * 0.5 +
def.filtered_weekly_player_df$TkW * 0.333
#### MIDFIELDERS xFPTS ####
#load in just midfielders
mid.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'M',]
#calculate xFpts for midfielders
mid.filtered_weekly_player_df$xFpts <- mid.filtered_weekly_player_df$xG * 5 +
mid.filtered_weekly_player_df$xA * 3 +
mid.filtered_weekly_player_df$AF * 2 +
mid.filtered_weekly_player_df$A2 * 1 +
mid.filtered_weekly_player_df$BCC * 1 +
mid.filtered_weekly_player_df$GP * 2 +
mid.filtered_weekly_player_df$Int.x * 0.333
mid.filtered_weekly_player_df$Pen * -1 +
mid.filtered_weekly_player_df$PKM * -2 +
mid.filtered_weekly_player_df$OG * -2 +
mid.filtered_weekly_player_df$YC * -1 +
mid.filtered_weekly_player_df$RC * -3 +
mid.filtered_weekly_player_df$xCS * 1 +
mid.filtered_weekly_player_df$xGAD * -0.5 +
mid.filtered_weekly_player_df$SOT * 0.5 +
mid.filtered_weekly_player_df$TkW * 0.333
#### FORWARDS xFPTS ####
#load in just forwards
for.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'F',]
#calculate xFpts for forwards
for.filtered_weekly_player_df$xFpts <-  for.filtered_weekly_player_df$xG * 4 +
for.filtered_weekly_player_df$xA * 3 +
for.filtered_weekly_player_df$AF * 2 +
for.filtered_weekly_player_df$A2 * 1 +
for.filtered_weekly_player_df$BCC * 1 +
for.filtered_weekly_player_df$GP * 2 +
for.filtered_weekly_player_df$Int.x * 0.333
for.filtered_weekly_player_df$Pen * -1 +
for.filtered_weekly_player_df$PKM * -2 +
for.filtered_weekly_player_df$OG * -2 +
for.filtered_weekly_player_df$YC * -1 +
for.filtered_weekly_player_df$RC * -3 +
for.filtered_weekly_player_df$xCS * 0 +
for.filtered_weekly_player_df$xGAD * -0.5 +
for.filtered_weekly_player_df$SOT * 0.5 +
for.filtered_weekly_player_df$TkW * 0.333
#combine all the position dataframes into one
all_combined_df <- rbind(def.filtered_weekly_player_df, mid.filtered_weekly_player_df, for.filtered_weekly_player_df)
write.csv(x = all_combined_df, file = "../../../../Desktop/weekly_data.custom_scoring.xFpts_epl_2019_2020.csv")
summary_combined_xfpts_df <- all_combined_df %>%
group_by(Player, Team.x, Position) %>%
summarize(n = n(), min_total = sum(Min.x),  mean_minutes = mean(Min.x), mean_xFpts = mean(xFpts), sd_xFpts = sd(xFpts), median_xFpts = median(xFpts),   total_xFpts = sum(xFpts), mean_xCS = mean(xCS), xCS = sum(xCS), CS = sum(CS))
hist(summary_combined_xfpts_df$sd_xFpts)
hist(summary_combined_xfpts_df$sd_fpts)
#negate %in%
`%!in%` = Negate(`%in%`)
#### Standard calculations for all players ####
#read in fbref_summary data
fbref_summ_df <- read_csv('../data/fbref/premier_league/19_20/name_cleaned.summary_table.game_week.csv')
#clean sheet data
cs_df <- read_csv('../data/fantrax_data/game_results.csv')
#just get the important stuff for clean sheets (name "Team.y" for easy merge in a sec)
all_cs_data_df <- data.frame('Team.y' = c(cs_df$Home, cs_df$Away), 'xG_against' = c(cs_df$xG_1, cs_df$xG), 'game_week' = c(cs_df$Wk, cs_df$Wk))
# add fbref data
min_minutes_weekly_merged_df <- merge(player_min_starts_weekly_df, fbref_summ_df, by=c('Player', 'game_week'))
# add clean sheet data
min_minutes_merged_cs_df <- merge(min_minutes_weekly_merged_df, all_cs_data_df, by=c("Team.y", "game_week"))
# calculate xGAD and xCS
min_minutes_merged_cs_df$xGAD <- ifelse(min_minutes_merged_cs_df$xG_against - 0.25 < 0, 0, min_minutes_merged_cs_df$xG_against - 0.25)
min_minutes_merged_cs_df$xCS <- ifelse(min_minutes_merged_cs_df$xGAD <= 1.25, 1 - min_minutes_merged_cs_df$xGAD/1.25, 0)
filtered_weekly_player_df <- min_minutes_merged_cs_df
#### DEFENDERS xFPTS ####
#calculate xFpts for defenders
def.filtered_weekly_player_df <- filtered_weekly_player_df[filtered_weekly_player_df$Position == 'D',]
# calculate fpts based on the updated fantrax rules
def.filtered_weekly_player_df$xFpts <- def.filtered_weekly_player_df$xG * 6 +
def.filtered_weekly_player_df$xA * 3 +
def.filtered_weekly_player_df$AF * 2 +
def.filtered_weekly_player_df$A2 * 1 +
def.filtered_weekly_player_df$BCC * 1 +
def.filtered_weekly_player_df$GP * 2 +
def.filtered_weekly_player_df$Int.x * 0.333
def.filtered_weekly_player_df$Pen * -1 +
def.filtered_weekly_player_df$PKM * -2 +
def.filtered_weekly_player_df$OG * -2 +
def.filtered_weekly_player_df$YC * -1 +
def.filtered_weekly_player_df$RC * -3 +
def.filtered_weekly_player_df$xCS * 4 +
def.filtered_weekly_player_df$xGAD * -0.5 +
def.filtered_weekly_player_df$SOT * 0.5 +
def.filtered_weekly_player_df$TkW * 0.333
#### MIDFIELDERS xFPTS ####
#load in just midfielders
mid.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'M',]
#calculate xFpts for midfielders
mid.filtered_weekly_player_df$xFpts <- mid.filtered_weekly_player_df$xG * 5 +
mid.filtered_weekly_player_df$xA * 3 +
mid.filtered_weekly_player_df$AF * 2 +
mid.filtered_weekly_player_df$A2 * 1 +
mid.filtered_weekly_player_df$BCC * 1 +
mid.filtered_weekly_player_df$GP * 2 +
mid.filtered_weekly_player_df$Int.x * 0.333
mid.filtered_weekly_player_df$Pen * -1 +
mid.filtered_weekly_player_df$PKM * -2 +
mid.filtered_weekly_player_df$OG * -2 +
mid.filtered_weekly_player_df$YC * -1 +
mid.filtered_weekly_player_df$RC * -3 +
mid.filtered_weekly_player_df$xCS * 1 +
mid.filtered_weekly_player_df$xGAD * -0.5 +
mid.filtered_weekly_player_df$SOT * 0.5 +
mid.filtered_weekly_player_df$TkW * 0.333
#### FORWARDS xFPTS ####
#load in just forwards
for.filtered_weekly_player_df = filtered_weekly_player_df[filtered_weekly_player_df$Position == 'F',]
#calculate xFpts for forwards
for.filtered_weekly_player_df$xFpts <-  for.filtered_weekly_player_df$xG * 4 +
for.filtered_weekly_player_df$xA * 3 +
for.filtered_weekly_player_df$AF * 2 +
for.filtered_weekly_player_df$A2 * 1 +
for.filtered_weekly_player_df$BCC * 1 +
for.filtered_weekly_player_df$GP * 2 +
for.filtered_weekly_player_df$Int.x * 0.333
for.filtered_weekly_player_df$Pen * -1 +
for.filtered_weekly_player_df$PKM * -2 +
for.filtered_weekly_player_df$OG * -2 +
for.filtered_weekly_player_df$YC * -1 +
for.filtered_weekly_player_df$RC * -3 +
for.filtered_weekly_player_df$xCS * 0 +
for.filtered_weekly_player_df$xGAD * -0.5 +
for.filtered_weekly_player_df$SOT * 0.5 +
for.filtered_weekly_player_df$TkW * 0.333
#combine all the position dataframes into one
all_combined_df <- rbind(def.filtered_weekly_player_df, mid.filtered_weekly_player_df, for.filtered_weekly_player_df)
write.csv(x = all_combined_df, file = "../../../../Desktop/weekly_data.custom_scoring.xFpts_epl_2019_2020.csv")
summary_combined_xfpts_df <- all_combined_df %>%
group_by(Player, Team.x, Position) %>%
summarize(n = n(), min_total = sum(Min.x),  mean_minutes = mean(Min.x), mean_xFpts = mean(xFpts), sd_xFpts = sd(xFpts), median_xFpts = median(xFpts),   total_xFpts = sum(xFpts), mean_xCS = mean(xCS), xCS = sum(xCS), CS = sum(CS))
hist(summary_combined_xfpts_df$sd_xFpts)
write.csv(x = summary_combined_xfpts_df, file = "../../../../Desktop/custom_scoring.xFpts_epl_2019_2020.csv")
for.filtered_weekly_player_df$Pen
def.filtered_weekly_player_df$Pen
